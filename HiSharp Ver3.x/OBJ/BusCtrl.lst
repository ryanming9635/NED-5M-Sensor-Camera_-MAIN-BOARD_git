C51 COMPILER V9.01   BUSCTRL                                                               12/17/2018 16:46:12 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE BUSCTRL
OBJECT MODULE PLACED IN .\OBJ\BusCtrl.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE BusCtrl.c LARGE OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\OBJ\Bus
                    -Ctrl.lst) OBJECT(.\OBJ\BusCtrl.obj)

line level    source

   1          //  **************************************************************************
   2          //
   3          //       Copyright (c) 1992-2006 Professonal Computer Technology Co., Ltd
   4          //
   5          //      All rights are reserved. Reproduction in whole or in parts is
   6          //  prohibited without the prior written consent of the copyright owner.
   7          //  --------------------------------------------------------------------------
   8          //
   9          //  Module: BUSCTRL.C
  10          //
  11          //  Purpose: Implementation of BUSCTRL.
  12          //
  13          //  Version: 0.01                                   2006/10/22 10:39¤U¤È
  14          //
  15          //  Compiler: Keil 8051 C Compiler v7.2
  16          //
  17          //  Reference:
  18          //
  19          //
  20          //
  21          //  --------------------------------------------------------------------------
  22          //  Modification:
  23          //
  24          //      R0.01 2006/10/22 10:39¤U¤È Phoenix Chuang
  25          //      Reason:
  26          //              1. Original.
  27          //      Solution:
  28          //      
  29          //  **************************************************************************
  30          //      -----------------------------------
  31          //                      Header Files
  32          //      ----------------------------------- 
  33          #include "types.h"
  34          #include "BusCtrl.h"
  35          
  36          #include "NED.h"
  37          //      ------------------------------------
  38          //                      Macro Definitions
  39          //      ------------------------------------ 
  40          
  41          
  42          //      ------------------------------------
  43          //                      Type Definitions
  44          //      ------------------------------------
  45          
  46          
  47          //      ------------------------------------
  48          //                      Variables Definitions
  49          //      ------------------------------------
  50          
  51          
  52          //      ------------------------------------
  53          //                      Function Prototypes
  54          //      ------------------------------------
C51 COMPILER V9.01   BUSCTRL                                                               12/17/2018 16:46:12 PAGE 2   

  55          
  56          
  57          // ===========================================================================
  58          //                      Parallel function description
  59          //==================================================================================
  60          //      
  61          //      
  62          //      
  63          void PCT_WriteAsicByte(U8 _dvc, U8 _pg, U8 _addr, U8 _wdat)
  64          {
  65   1              _dvc = 0;                       //... temporal
  66   1      
  67   1              EA = OFF;               // Disable All Interrupt
  68   1              //... P[7:4]:INT[5:2], P1_3:HALE, P1_2:HRDB, P1_1:HWRB, P1_0:HSPB
  69   1      #ifdef NED
  70   1          MCTRL_set();
  71   1      #else
                  MCTRL = 0xf6;               //... initial state
              #endif
  74   1      
  75   1              if(_pg == DVC_PG0){     HCSB1=0;        HCSB0=0;}
  76   1              else if(_pg == DVC_PG1){        HCSB1=0;        HCSB0=1;}
  77   1              else if(_pg == DVC_PG2){        HCSB1=1;        HCSB0=0;}
  78   1              MDATA = _addr;
  79   1              HALE = 1;
  80   1                              #ifdef BDelay
  81   1                              //Wait_ms(Delay_val);//ryan..
  82   1                              DELAY_FOR(Delay_val); 
  83   1                              #endif
  84   1              HALE = 0;
  85   1              MDATA = _wdat;
  86   1              HWRB = 0;
  87   1                              #ifdef BDelay
  88   1                              //Wait_ms(Delay_val);//ryan..
  89   1                              DELAY_FOR(Delay_val); 
  90   1                              #endif
  91   1                              
  92   1              HWRB = 1;
  93   1      
  94   1      //      MCTRL_set();//MCTRL = 0xf6;             //... initial state
  95   1      #ifdef NED
  96   1          MCTRL_set();
  97   1      #else
                  MCTRL = 0xf6;               //... initial state
              #endif
 100   1      
 101   1              HCSB0=1;
 102   1              HCSB1=1;
 103   1              MDATA = 0xff;
 104   1              EA = ON;                // Enable All Interrupt
 105   1      }
 106          
 107          //==================================================================================
 108          //      
 109          //      
 110          //      
 111          void PCT_WriteAsicTable(U8 _dvc, U8 _pg, U8 _addr, U8 *_tbl_ptr, U8 _tbl_cnt)
 112          {
 113   1              _dvc = 0;                       //... temporal
 114   1      
 115   1              EA = OFF;               // Disable All Interrupt
 116   1              //... P[7:4]:INT[5:2], P1_3:HALE, P1_2:HRDB, P1_1:HWRB, P1_0:HSPB
C51 COMPILER V9.01   BUSCTRL                                                               12/17/2018 16:46:12 PAGE 3   

 117   1              //MCTRL_set();///MCTRL = 0xf6;          //... initial state
 118   1      #ifdef NED
 119   1          MCTRL_set();
 120   1      #else
                  MCTRL = 0xf6;               //... initial state
              #endif
 123   1      
 124   1              if(_pg == DVC_PG0){     HCSB1=0;        HCSB0=0;}
 125   1              else if(_pg == DVC_PG1){        HCSB1=0;        HCSB0=1;}
 126   1              else if(_pg == DVC_PG2){        HCSB1=1;        HCSB0=0;}
 127   1      
 128   1              do {
 129   2                      MDATA = _addr++;
 130   2                      HALE = 1;
 131   2                                      #ifdef BDelay
 132   2                              //Wait_ms(Delay_val);//ryan..
 133   2                              DELAY_FOR(Delay_val); 
 134   2                              #endif
 135   2      
 136   2                      HALE = 0;
 137   2              
 138   2                      MDATA = *_tbl_ptr++;
 139   2                      HWRB = 0;
 140   2                                      #ifdef BDelay
 141   2                              //Wait_ms(Delay_val);//ryan..
 142   2                              DELAY_FOR(Delay_val); 
 143   2                              #endif
 144   2      
 145   2                      HWRB = 1;
 146   2              }while( --_tbl_cnt!=0 );
 147   1      
 148   1      //      MCTRL_set();///MCTRL = 0xf6;            //... initial state
 149   1      #ifdef NED
 150   1          MCTRL_set();
 151   1      #else
                  MCTRL = 0xf6;               //... initial state
              #endif
 154   1      
 155   1              HCSB0=1;
 156   1              HCSB1=1;
 157   1              MDATA = 0xff;
 158   1              EA = ON;                // Enable All Interrupt
 159   1      }
 160          
 161          //==================================================================================
 162          //      
 163          //      
 164          //      
 165          U8 PCT_ReadAsicByte(U8 _dvc, U8 _pg, U8 _addr)
 166          {
 167   1              register U8 _rdat_;
 168   1      
 169   1              EA = OFF;               // Disable All Interrupt
 170   1              //... P[7:4]:INT[5:2], P1_3:HALE, P1_2:HRDB, P1_1:HWRB, P1_0:HSPB
 171   1              //MCTRL_set();///MCTRL = 0xf6;          //... initial state
 172   1      #ifdef NED
 173   1          MCTRL_set();
 174   1      #else
                  MCTRL = 0xf6;               //... initial state
              #endif
 177   1      
 178   1              _dvc = 0;                       //... temporal
C51 COMPILER V9.01   BUSCTRL                                                               12/17/2018 16:46:12 PAGE 4   

 179   1              if(_pg == DVC_PG0){ HCSB1=0; HCSB0=0;}
 180   1              else if(_pg == DVC_PG1){ HCSB1=0; HCSB0=1;}
 181   1              else if(_pg == DVC_PG2){ HCSB1=1; HCSB0=0;}
 182   1      
 183   1              MDATA = _addr;
 184   1              HALE = 1;
 185   1                                  #ifdef BDelay
 186   1                                      DELAY_FOR(Delay_val); 
 187   1                              //Wait_ms(Delay_val);//ryan..
 188   1                              #endif
 189   1              HALE = 0;
 190   1              MDATA = 0xff;           // port0(MDATA) input mode
 191   1                                #ifdef BDelay
 192   1                                                DELAY_FOR(Delay_val); 
 193   1                              //Wait_ms(Delay_val);//ryan..
 194   1                              #endif
 195   1      
 196   1              HRDB = 0;
 197   1              _rdat_ = MDATA;
 198   1              
 199   1                                                      #ifdef BDelay
 200   1                              //Wait_ms(Delay_val);//ryan..
 201   1                                              DELAY_FOR(Delay_val); 
 202   1                                                      #endif
 203   1      
 204   1              HRDB = 1;
 205   1      
 206   1      //      MCTRL_set();///MCTRL = 0xf6;            //... initial state
 207   1      #ifdef NED
 208   1          MCTRL_set();
 209   1      #else
                  MCTRL = 0xf6;               //... initial state
              #endif
 212   1      
 213   1              HCSB0=1;
 214   1              HCSB1=1;
 215   1              EA = ON;                // Enable All Interrupt
 216   1              return _rdat_;
 217   1      }
 218          
 219          
 220          //==================================================================================
 221          //      
 222          //      Write Register Address & Data form Table until address=0xFFFF then STOP
 223          //      
 224          void PCT_WriteSTable(U8 _dvc, WRITE_REG_DATA *_tbl_ptr)
 225          {
 226   1              #define PAGE GETHBYTE(_tbl_ptr->addr)
 227   1              #define ADDR GETLBYTE(_tbl_ptr->addr)
 228   1      
 229   1              _dvc = 0;
 230   1              while( _tbl_ptr->addr!=0xFFFF ) {
 231   2                  if(TW28_ReadByte(PAGE, ADDR) != _tbl_ptr->dat)//William @HS 2007 0829 Ver3.4
 232   2                      {
 233   3                      TW28_WriteByte(PAGE, ADDR, _tbl_ptr->dat);
 234   3                      }
 235   2                      _tbl_ptr++;     
 236   2              }
 237   1      }
 238          
 239          //==================================================================================
 240          //      
C51 COMPILER V9.01   BUSCTRL                                                               12/17/2018 16:46:12 PAGE 5   

 241          // Change to I2C Control Mode
 242          //      
 243          void PTC_SwitchToI2CMode(void)
 244          {
 245   1      #ifdef TW28_I2CBUS
                      HSPB    = 1;
                      HALE    = 1;
                      MDATA   = 0xFF; 
                      HCSB0   = 0;
                      HCSB1   = 0;
                      HRDB    = 0;
                      HWRB    = 0;
              #endif
 254   1      }
 255          
 256          /*
 257          void MCTRL_set(void)
 258          {
 259          
 260          //... P[7:4]:INT[5:2], P2_3:HALE, P2_2:HRDB, P2_1:HWRB, P2_0:HSPB
 261          P2_0=0;///HSPB=0;
 262          P2_1=1;///HWRB=1;
 263          P2_2=1;///HRDB=1;
 264          P2_3=0;///HALE=0;
 265          }
 266          */
 267          // ===========================================================================
 268          // END of File 
 269          // ===========================================================================
 270          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    512    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      18
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
