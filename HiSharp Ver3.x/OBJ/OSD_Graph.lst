C51 COMPILER V9.50a   OSD_GRAPH                                                            02/19/2019 11:34:31 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE OSD_GRAPH
OBJECT MODULE PLACED IN .\OBJ\OSD_Graph.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE OSD_Graph.c LARGE OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\OBJ\O
                    -SD_Graph.lst) TABS(2) OBJECT(.\OBJ\OSD_Graph.obj)

line level    source

   1          //  **************************************************************************
   2          //
   3          //       Copyright (c) 1992-2006 Professonal Computer Technology Co., Ltd
   4          //
   5          //      All rights are reserved. Reproduction in whole or in parts is
   6          //  prohibited without the prior written consent of the copyright owner.
   7          //  --------------------------------------------------------------------------
   8          //
   9          //  Module: OSDCtrl.C
  10          //
  11          //  Purpose: Implementation of OSD Control.
  12          //
  13          //  Version: 0.01                                   2007/5/7 09:04¤W¤È
  14          //
  15          //  Compiler: Keil 8051 C Compiler v7.2
  16          //
  17          //  Reference:
  18          //
  19          //
  20          //
  21          //  --------------------------------------------------------------------------
  22          //  Modification:
  23          //
  24          //  R0.01 2007/5/7 09:04¤W¤È Phoenix Chuang
  25          //  Reason:
  26          //    1. Original.
  27          //  Solution:
  28          //  
  29          //  **************************************************************************
  30          //  -----------------------------------
  31          //      Header Files
  32          //  ----------------------------------- 
  33          #include "types.h"
  34          #include "BusCtrl.h"
  35          #include "OSD_Graph.h"
  36          #include "OSDCtrl.h"
  37          
  38          #include "Graph.h"
  39          
  40          //  ------------------------------------
  41          //      Macro Definitions
  42          //  ------------------------------------ 
  43          #define WriteByteOSD(b, c)      PCT_WriteAsicByte(0, DVC_PG2, b, c)
  44          #define ReadByteOSD(a)        PCT_ReadAsicByte(0, DVC_PG2, a)
  45          #define ReadOSDMemWr()        PCT_ReadAsicByte(0, DVC_PG2,0x0A)
  46          #define ReadOSDBufWr()        PCT_ReadAsicByte(0, DVC_PG2,0x04)
  47          
  48          
  49          //  ------------------------------------
  50          //      Type Definitions
  51          //  ------------------------------------
  52          
  53          
  54          //  ------------------------------------
C51 COMPILER V9.50a   OSD_GRAPH                                                            02/19/2019 11:34:31 PAGE 2   

  55          //      Variables Definitions
  56          //  ------------------------------------
  57            U8 graphattr;
  58          
  59          
  60          //  ------------------------------------
  61          //      Function Prototypes
  62          //  ------------------------------------
  63          
  64          
  65          
  66          // ===========================================================================
  67          //                      Parallel function description
  68          //            OSD Process by Graph Mode
  69          // ===========================================================================
  70          //
  71          // Set Graph attribute BLANK & MIX
  72          //
  73          void PCT_ClearGraphAttr(void)
  74          {
  75   1        graphattr = 0;
  76   1      }
  77          
  78          // ===========================================================================
  79          //
  80          // Set Graph attribute BLANK & MIX
  81          //
  82          void PCT_PreSetGraphAttr(U8 _attribute)
  83          {
  84   1        graphattr = _attribute;
  85   1        //printf("=== Graph Attribute = %bx === \n", graphattr);
  86   1      }
  87          
  88          //==================================================================================
  89          //
  90          //
  91          //
  92          void PCT_OSD16x16GraphX(U8 _posx, U16 _posy, U8 _indx)
  93          {
  94   1        register U8 row, column, cntr, cntc,posx;
  95   1        PCHAR graph;  
  96   1        
  97   1        _posx <<= 1;
  98   1        posx = _posx = _posx + BOX_OFFSET_X;    
  99   1        _posy <<= 3;
 100   1        _posy += BOX_OFFSET_Y;
 101   1        graph = GRAPH_TABLE + (_indx*258);
 102   1        row = *graph++;
 103   1        column = *graph++;
 104   1        
 105   1        for(cntr=0; cntr<row; cntr++) {
 106   2          for(cntc=0; cntc<column; cntc+=4) {
 107   3            WriteByteOSD(0x00, graph[0]+graphattr);   //... 1st pixel
 108   3            WriteByteOSD(0x01, graph[1]+graphattr);   //... 2nd pixel
 109   3            WriteByteOSD(0x02, graph[2]+graphattr);   //... 3rd pixel
 110   3            WriteByteOSD(0x03, graph[3]+graphattr);   //... 4th pixel
 111   3            WriteByteOSD(0x04, 0x80);         //... write to buffer
 112   3            graph+=4;
 113   3        
 114   3            WriteByteOSD(0x05, posx);
 115   3            WriteByteOSD(0x07, _posy&0xff);
 116   3        
C51 COMPILER V9.50a   OSD_GRAPH                                                            02/19/2019 11:34:31 PAGE 3   

 117   3            WriteByteOSD(0x09, ((_posy)>>8)<<2 );             //... start: OSD_POS_V_ODD, end: OSD_POS_V_ODD
 118   3            WriteByteOSD(0x0A, 0x80|(ReadByteOSD(0x0A)&0x3F));        //... x path
 119   3            while(ReadOSDMemWr()&BIT7);                   //... wait finishing write for odd field
 120   3        
 121   3            WriteByteOSD(0x09, (((_posy)>>8)<<2)|0x08);           //... start: OSD_POS_V_Even, end: OSD_POS_V_Even
 122   3            WriteByteOSD(0x0A, 0x80|(ReadByteOSD(0x0A)&0x3F));        //... x path
 123   3            while(ReadOSDMemWr()&BIT7);                   //... wait finishing write for odd field
 124   3      
 125   3            posx++;
 126   3          }
 127   2          posx = _posx;
 128   2          _posy++;
 129   2        }
 130   1      }
 131          
 132          //==================================================================================
 133          //
 134          //
 135          //
 136          void PCT_ShowGraphString(U8 _path, U8 _addrx, U8 _addry, PCHAR _strptr)
 137          {
 138   1        register signed char slen;
 139   1      
 140   1        slen = strlen(_strptr);
 141   1        if(slen<0) return; 
 142   1        ifBitSet(_path, PTH_X) {
 143   2          do{
 144   3            PCT_OSD16x16GraphX(_addrx, _addry, _strptr[0]);
 145   3            slen --;
 146   3            _strptr++;
 147   3            _addrx+=2;
 148   3          }while(slen>0);
 149   2        } else {
 150   2          do{
 151   3          }while(slen>0);
 152   2        }
 153   1        PTC_SwitchToI2CMode();
 154   1      
 155   1      }
 156          
 157          //==================================================================================
 158          //
 159          //
 160          //
 161          
 162          
 163          // ===========================================================================
 164          // END of File 
 165          // ===========================================================================


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    583    ----
   CONSTANT SIZE    =   5834    ----
   XDATA SIZE       =      1      18
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
