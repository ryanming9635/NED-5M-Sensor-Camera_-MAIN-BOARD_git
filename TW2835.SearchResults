---- printf Matches (184 in 11 files) ----
CommandShell.c (hisharp ver3.x):		printf("\n<R>%02bx[%02bx]=%02bx", page, start, TW28_ReadByte(page, start) );
CommandShell.c (hisharp ver3.x):	printf("\n<R>%02bx[%02bx]=%02bx", page, addr, TW28_ReadByte(page, addr) );
CommandShell.c (hisharp ver3.x):	printf("ReadAsicByte == %bx \n", _rdat);
CommandShell.c (hisharp ver3.x):		printf("\n ======== PAGE %b2x =============\n",page);
CommandShell.c (hisharp ver3.x):			printf("%b2x\t", TW28_ReadByte(page, addr));
CommandShell.c (hisharp ver3.x):			if((addr%16)==0)  printf("\n"); 
CommandShell.c (hisharp ver3.x):	printf("===== Format : ch0=[%bx] ch1=[%bx] ch2=[%bx] ch3=[%bx] =====\n",	\ 
CommandShell.c (hisharp ver3.x)://printf("char *strptr=%s\r\n",strptr);//ryan..
CommandShell.c (hisharp ver3.x):		//printf("Read Page Buffer Data");
CommandShell.c (hisharp ver3.x):		//printf("Read One Buffer Data");
CommandShell.c (hisharp ver3.x):		//printf("Write One Buffer Data");
CommandShell.c (hisharp ver3.x):		//printf("Command is Write Bus");
CommandShell.c (hisharp ver3.x):		//printf("Command is Read Bus");
CommandShell.c (hisharp ver3.x):		//printf("Command is Audio Mixing");
CommandShell.c (hisharp ver3.x):		//printf("Command is Audio Mute");
CommandShell.c (hisharp ver3.x):		//printf("List Audio Register Value");
CommandShell.c (hisharp ver3.x):		//printf("Audio Gain Control");
CommandShell.c (hisharp ver3.x):		//printf("Audio Select Live & Mixing Mode");
CommandShell.c (hisharp ver3.x):		//printf("All Register Dump");
CommandShell.c (hisharp ver3.x):		//printf("Video Mix's Windows Type Select");
CommandShell.c (hisharp ver3.x):		//printf("Video Mixerr's Windows Type Select");
CommandShell.c (hisharp ver3.x):		//printf("Video Attribute Control");
CommandShell.c (hisharp ver3.x):		//printf("Video Attribute Control");
CommandShell.c (hisharp ver3.x):		//printf("Initial TW2835");
CommandShell.c (hisharp ver3.x):		//printf("Auto Detectation Video Format");
CommandShell.c (hisharp ver3.x):		//printf("Setting Video Format Control");
CommandShell.c (hisharp ver3.x):		//printf("Show String on OSD");
CommandShell.c (hisharp ver3.x):		//printf("Command Shell for HiSharp");
CommandShell.c (hisharp ver3.x):		//printf("Command Shell for HiSharp Set S or J Mode");
CommandShell.c (hisharp ver3.x):		//printf("Command Shell for HiSharp Disable Scroll!");
CommandShell.c (hisharp ver3.x):		//printf("Command Shell for HiSharp Disable Scroll!");
CommandShell.c (hisharp ver3.x):			printf("\r\nget Monitor=%x",(U16) Com_run);
CommandShell.c (hisharp ver3.x):				printf("\r\nget PWM=%x",(U16)Com_run);
CommandShell.c (hisharp ver3.x):				printf("\r\nget temp=%x",(U16)ADT75_GetTemp());
CommandShell.c (hisharp ver3.x):				printf("\r\nget Press_check=%x",(U16)ADC_FPBS());
CommandShell.c (hisharp ver3.x):					printf("\r\nget Version=%x%x%x",(U16)Ver0,(U16)Ver1,(U16)Ver2);
Main.c (hisharp ver3.x):#include "Printf.h"
Main.c (hisharp ver3.x):						printf("%x",(U16)(ch));
Main.c (hisharp ver3.x):						printf("\r\nCom_pos=%x  data=%x",(U16) (Com_pos-1), (U16) SC16_Com[Com_pos-1]);
Main.c (hisharp ver3.x):						printf("\r\nCom_start");
Main.c (hisharp ver3.x):						printf("\r\nCom_pos=%x  data=%x",(U16) (Com_pos-1), (U16) SC16_Com[Com_pos-1]);
Main.c (hisharp ver3.x):						printf("\r\nCom_end");
Main.c (hisharp ver3.x):						printf("\r\nCom_pos=%x  data=%x",(U16) (Com_pos), (U16) SC16_Com[Com_pos]);
Main.c (hisharp ver3.x):						printf("\r\nBCC check..");
Main.c (hisharp ver3.x):						printf("*");
Main.c (hisharp ver3.x):						printf("\r\nCom_pos=%x  data=%x",(U16) (Com_pos-1), (U16) SC16_Com[Com_pos-1]);
Main.c (hisharp ver3.x):     printf("\r\nget data=%x %x %x %x",(U16)RScommand.commBuf[0],(U16)RScommand.commBuf[1]\
Main.c (hisharp ver3.x)://printf(">");//ryan..
Main.c (hisharp ver3.x):							//printf("\r\n RsRxRp=%x",(U16) RsRxRp); 	
Main.c (hisharp ver3.x):	  		printf("\r\n SC16_com_state=%x",(U16) SC16_com_state);
Main.c (hisharp ver3.x):					printf("\r\n SC16_busy_flag_clear=%x",(U16) SC16_busy_flag);
Main.c (hisharp ver3.x)://printf("%x",(U16)(ch));
Main.c (hisharp ver3.x)://printf("\r\nReadAsicByte == %x", (U16)TW28_ReadByte(1, 0xA1));
Main.c (hisharp ver3.x):printf("(A)");
Main.c (hisharp ver3.x):printf("(B)");
Main.c (hisharp ver3.x):printf("(C)");
Main.c (hisharp ver3.x):printf("(D)");
Main.c (hisharp ver3.x):printf("(0xA1=%b2x)", TW28_ReadByte(1, 0xA1));
Main.c (hisharp ver3.x):printf("(0xA2=%b2x)", TW28_ReadByte(1, 0xA2));
Main.c (hisharp ver3.x)://printf("RScommand.commBuf=%s\r\n",RScommand.commBuf);  //ryan
Main.c (hisharp ver3.x):	printf("\r\nMonitor mode=%x, m_current=%x ",(U16)ch, (U16)m_current);	
Main.c (hisharp ver3.x):		//printf(" ,return=%x", (U16)Error);
Main.c (hisharp ver3.x):  				printf(" Error=1");
Main.c (hisharp ver3.x):		printf("\r\nPWM_set ch=%x , val=%x",(U16)ch,(U16)set_val);
Main.c (hisharp ver3.x):		//printf("\r\nTemp_check=%x",val);
Main.c (hisharp ver3.x):printf("\r\nADC_FPBS()=%x ",(U16)val);
Main.c (hisharp ver3.x):		printf("\r\nGet_press=%x ",(U16)temp_val);
Main.c (hisharp ver3.x):		printf("\r\nGet_press=%x ",(U16)val);
NED.c (hisharp ver3.x):#include "printf.h"
NED.c (hisharp ver3.x)://Printf("Val=%X %X %X %X %X %X %X %X \r\n",vall[7],vall[6],vall[5],vall[4],vall[3],vall[2],vall[1],vall[0]);
NED.c (hisharp ver3.x)://Printf("Val= %x\r\n",val2);
NED.c (hisharp ver3.x):Printf("-> \r\n",(U16) x,(U16) val2[x]);  //ryan 	  
NED.c (hisharp ver3.x):Printf("Addr=%x  Data=%x \r\n",(U16) x,(U16) val2[x]);  //ryan 
NED.c (hisharp ver3.x):Printf("                    <-\r\n",(U16) x,(U16) val2[x]);  //ry		
NED.c (hisharp ver3.x):		//Printf("Data=%x \r\n",(U16)val);  //ryan
NED.c (hisharp ver3.x):while(ADCTL&0x08);// printf("ADC is busying\r\n");  //wating for adc
NED.c (hisharp ver3.x):					printf("\r\n Set_Camera_speed=%x",(U16) val);
NED.c (hisharp ver3.x):  			printf("\r\n GPIO=%x",(U16)GPIO_state);
NED.c (hisharp ver3.x)://printf("power on");
NED.c (hisharp ver3.x):					printf("\r\n SC16_ID=%x Data=",(U16) DRP_ID[addr]);
NED.c (hisharp ver3.x):					printf("\r\n count=%x Data=",(U16) count);
NED.c (hisharp ver3.x):						//printf("(N=%x)",(U16)addr);	
NED.c (hisharp ver3.x):					printf("sc16_data=%x ",(U16)data_temp);					
NED.c (hisharp ver3.x):							//printf("get first EXT");
NED.c (hisharp ver3.x):								//printf("get data");
NED.c (hisharp ver3.x):							//printf("\r\nGot Camera ready");
NED.c (hisharp ver3.x):						//printf("\r\nRecived a command from device1..");
NED.c (hisharp ver3.x):							//printf("\r\nRecived a command from device2..");
NED.c (hisharp ver3.x):					//	printf("\r\nRecived a command from device3..");
NED.c (hisharp ver3.x):							printf("%x ",(U16)SC16_com_buff[loop]);					
NED.c (hisharp ver3.x):						//printf("ECOM,");
NED.c (hisharp ver3.x):						printf("%x ",(U16)SC16_com_buff[loop]);					
NED.c (hisharp ver3.x):						//printf("\r\n count=%x",(U16) count);
NED.c (hisharp ver3.x):				//printf("\r\nRecived a command from device4..");
NED.c (hisharp ver3.x):					printf("%x ",(U16)SC16_Com[loop]);					
NED.c (hisharp ver3.x):				//printf("SET_LED");
NED.c (hisharp ver3.x):					printf("\r\nSC16_Com[%x]=%x",(U16)SC16_ComAddr,(U16)Data);
NED.c (hisharp ver3.x):					printf("\r\nSC16_Com[%x]=%x",(U16)(SC16_ComAddr),(U16)Data);
NED.c (hisharp ver3.x):					   //printf("\r\nSC16_SendDataSelect(0);");
NED.c (hisharp ver3.x):					  // printf("\r\nSC16_SendDataSelect(6);");
NED.c (hisharp ver3.x):					//printf("\r\n SC16_ID=%x Data=",(U16) DRP_ID[addr]);
NED.c (hisharp ver3.x):					//printf("\r\n count=%x Data=",(U16) count);
NED.c (hisharp ver3.x):							printf("\r\nDVR_startup=OK");					
NED.c (hisharp ver3.x):							printf("\r\nCamera_startup=OK");					
NED.c (hisharp ver3.x):		default:  //printf("\r\n not megawin com");	
NED.c (hisharp ver3.x):					//printf("\r\n Got data from the sc16");					
NED.c (hisharp ver3.x):									//printf("\r\n Sent COM to Camera");//ryan@20150908
NED.c (hisharp ver3.x):										printf("\r\nCommand_Check fail");
NED.c (hisharp ver3.x):			printf("\r\nSC16_BCC_Check pass");
NED.c (hisharp ver3.x):			printf("\r\nSC16_BCC_Check fail");
NED.c (hisharp ver3.x):Printf("GetThyst=%X",(U16)ADT75_GetThyst());
NED.c (hisharp ver3.x):Printf(" GetTOs=%X  ",(U16)ADT75_GetTOs());
NED.c (hisharp ver3.x):Printf(" GetCon=%X  ",(U16)ADT75_GetCon());
NED.c (hisharp ver3.x):    Printf("GetTemp=%X degree\r\n",(U16)((ADT75_GetTemp()>>4)/16));
NED.c (hisharp ver3.x): //   Printf("ADT75_GetCon=%X\r\n", ADT75_GetCon());
NED.c (hisharp ver3.x):Printf("\r\n");
NED.c (hisharp ver3.x):Printf("SetBaudrate_Dev_addr=%x\r\n",(U16) addr);
NED.c (hisharp ver3.x):Printf("SetBaudrate_MCR=%x\r\n",(U16) ReadI2C(addr,MCR));
NED.c (hisharp ver3.x):Printf("SetBaudrate_prescaler=%x\r\n",(U16) prescaler);
NED.c (hisharp ver3.x):Printf("SetBaudrate_divisor=%x\r\n",(U16) divisor);
NED.c (hisharp ver3.x):Printf("SetBaudrate_DLL=%x\r\n",(U16) ReadI2C(addr,DLL));
NED.c (hisharp ver3.x):Printf("SetBaudrate_DLH=%x\r\n",(U16) ReadI2C(addr,DLH));
NED.c (hisharp ver3.x): //   printf("\r\n**Addr=%X PortState=%X\r\n",(U16)addr,(U16) ReadI2C(addr,IOState));
NED.c (hisharp ver3.x):    printf("\r\n**Available data=%X",(U16)ReadI2C(addr,RXLVL));
NED.c (hisharp ver3.x):    printf("\r\n**Available Space=%X",ReadI2C(addr,TXLVL));
NED.c (hisharp ver3.x):             printf("\r\n**THR is busy..=%X",addr);
NED.c (hisharp ver3.x):             printf("*ping is fail(0x55)=%X\r\n",(U16)addr);
NED.c (hisharp ver3.x):            printf("*ping is fail(0xAA)=%X\r\n",(U16)addr);
NED.c (hisharp ver3.x):             printf("*ping is pass, Address=%X\r\n",(U16)addr);
NED.c (hisharp ver3.x):printf("\r\n**No data available");
NED.c (hisharp ver3.x):		printf("\r\n** available ID=%x ,Data=%x",(U16)addr, (U16) ReadI2C(addr,RXLVL));
NED.c (hisharp ver3.x):printf("\r\n Vin=%x,HDELAY_PB=%x",(U16) x ,(U16)val);
NED.c (hisharp ver3.x):printf("\r\n Vin=%x,HDELAY_XY=%x",(U16) x ,(U16)val);
NED.c (hisharp ver3.x):printf("\r\n Vin=%x,VDELAY_XY=%x",(U16) x ,(U16)val);
NED.c (hisharp ver3.x):printf("\r\n OSD start=%x",(U16)TW28_ReadByte(1,0x74));
NED.c (hisharp ver3.x):printf("\r\n Vin=%x,HAvtive_XY=%x",(U16) x ,(U16)val);
NED.c (hisharp ver3.x):printf("\r\n Vin=%x,VAvtive_XY=%x",(U16) x ,(U16)val);
OSDAction .c (hisharp ver3.x)://printf("SYSVDOSGL=%x MSGVDOSGL=%x\r\n", SYSVDOSGL, MSGVDOSGL);  //ryan
OSDAction .c (hisharp ver3.x):	//printf("Command Shell for HiSharp Set S or J Mode");
OSDCtrl.c (hisharp ver3.x):	//printf("=== Fore Color = %bx === \n", foreColor);
OSDCtrl.c (hisharp ver3.x):	//printf("=== Back Color = %bx === \n", backColor);
OSD_Graph.c (hisharp ver3.x):	//printf("=== Graph Attribute = %bx === \n", graphattr);
Printf.c (hisharp ver3.x):#include "printf.h"
Printf.c (hisharp ver3.x):void Printf( const char CODE_P *fmt, ... )
Printf.c (hisharp ver3.x):void dPrintf( const char CODE_P *fmt, ... )
Printf.c (hisharp ver3.x):void wPrintf( const char CODE_P *fmt, ... )
Printf.c (hisharp ver3.x):void ePrintf( const char CODE_P *fmt, ... )
Printf.h (hisharp ver3.x):#ifndef __PRINTF__
Printf.h (hisharp ver3.x):#define __PRINTF__
Printf.h (hisharp ver3.x): void Printf ( const char CODE_P *fmt, ... );
Printf.h (hisharp ver3.x): #define Printf(a,b)	//
Printf.h (hisharp ver3.x): void dPrintf( const char CODE_P *fmt, ... );
Printf.h (hisharp ver3.x): void wPrintf( const char CODE_P *fmt, ... );
Printf.h (hisharp ver3.x): void ePrintf( const char CODE_P *fmt, ... );
Printf.h (hisharp ver3.x)://#endif	//__PRINTF__
TW2835_Init.c (hisharp ver3.x):                       // printf("Video_lock=%X",(TW28_ReadByte(0, SENSORCHANNEL<<4)&0x0F));  //ryan..
TW2835_Init.c (hisharp ver3.x):                      //  printf(" SYSTYPE=%X\r\n",SYSTYPE);  //ryan..
TW2835_Init.c (hisharp ver3.x):          //printf("PCT_InitialTW2835_loop\r\n");  //ryan..       
TW2835_Init.c (hisharp ver3.x):     //printf("PCT_TW2835_Initial_done,systype=%d\r\n",SYSTYPE);  //ryan..
TW2835_Init.c (hisharp ver3.x):     //printf("PCT_InitialOSD_done\r\n");  //ryan..
TW28xx_Audio.c (hisharp ver3.x):	printf("***** %bx == %bx *****\n",0x4c, TW28_ReadByte(0, 0x4c) );
TW28xx_Audio.c (hisharp ver3.x):	printf("***** %bx == %bx *****\n",0x60, TW28_ReadByte(0, 0x60) );
TW28xx_Audio.c (hisharp ver3.x):	printf("***** %bx == %bx *****\n",0x61, TW28_ReadByte(0, 0x61) );
TW28xx_Audio.c (hisharp ver3.x):	printf("***** %bx == %bx *****\n",0x62, TW28_ReadByte(0, 0x62) );
TW28xx_Audio.c (hisharp ver3.x):	printf("***** %bx == %bx *****\n",0x63, TW28_ReadByte(0, 0x63) );
TW28xx_Audio.c (hisharp ver3.x):	printf("***** %bx == %bx *****\n",0x64, TW28_ReadByte(0, 0x64) );
TW28xx_Audio.c (hisharp ver3.x):	printf("***** %bx == %bx *****\n",0x65, TW28_ReadByte(0, 0x65) );
TW28xx_Audio.c (hisharp ver3.x):	printf("***** %bx == %bx *****\n",0x66, TW28_ReadByte(0, 0x66) );
TW28xx_Audio.c (hisharp ver3.x):	printf("***** %bx == %bx *****\n",0x67, TW28_ReadByte(0, 0x67) );
TW28xx_Audio.c (hisharp ver3.x):	printf("***** %bx == %bx *****\n",0x68, TW28_ReadByte(0, 0x68) );
TW28xx_Audio.c (hisharp ver3.x):	printf("***** %bx == %bx *****\n",0x69, TW28_ReadByte(0, 0x69) );
TW28xx_Audio.c (hisharp ver3.x):	printf("***** %bx == %bx *****\n",0x6A, TW28_ReadByte(0, 0x6A) );
TW28xx_Audio.c (hisharp ver3.x):	printf("***** %bx == %bx *****\n",0x6B, TW28_ReadByte(0, 0x6B) );
TW28xx_Audio.c (hisharp ver3.x):	printf("***** %bx == %bx *****\n",0x6C, TW28_ReadByte(0, 0x6C) );
TW28xx_Audio.c (hisharp ver3.x):	printf("***** %bx == %bx *****\n",0x6D, TW28_ReadByte(0, 0x6D) );
TW28xx_Audio.c (hisharp ver3.x):	printf("***** %bx == %bx *****\n",0x6E, TW28_ReadByte(0, 0x6E) );
TW28xx_Audio.c (hisharp ver3.x):	printf("***** %bx == %bx *****\n",0x6F, TW28_ReadByte(0, 0x6F) );
TW28xx_Audio.c (hisharp ver3.x):	printf("***** %bx == %bx *****\n",0x70, TW28_ReadByte(0, 0x70) );
TW28xx_Audio.c (hisharp ver3.x):	printf("***** %bx == %bx *****\n",0x71, TW28_ReadByte(0, 0x71) );
TW28xx_Audio.c (hisharp ver3.x):	printf("***** %bx == %bx *****\n",0x72, TW28_ReadByte(0, 0x72) );
TW28xx_Audio.c (hisharp ver3.x):	printf("***** %bx == %bx *****\n",0x73, TW28_ReadByte(0, 0x73) );
TW28xx_Audio.c (hisharp ver3.x):	printf("***** %bx == %bx *****\n",0x74, TW28_ReadByte(0, 0x74) );
UART.c (hisharp ver3.x):		//printf(">");
UART.c (hisharp ver3.x):						//printf("%x",(U16)RS_RECVBUF[RsRxWp]);
